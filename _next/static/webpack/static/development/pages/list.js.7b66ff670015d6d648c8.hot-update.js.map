{"version":3,"file":"static/webpack/static/development/pages/list.js.7b66ff670015d6d648c8.hot-update.js","sources":["webpack:///./components/Sankeys.js","webpack:///./node_modules/lodash/indexOf.js"],"sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withPropsOnChange } from \"recompose\";\nimport styled from \"styled-components\";\n\nconst replies = [\"申請前已對外提供\", \"同意提供\", \"不同意提供\", \"還未回覆\"];\n\nconst nameColors = [\"#aab6fe\", \"#b2fab4\", \"#ffa4a2\", \"#ffe97d\"];\nconst valueColors = [\"#49599a\", \"#519657\", \"#af4448\", \"#c88719\"];\n\nconst Wrapper = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Item = styled.div`\n  position: relative;\n  flex: 1;\n  background-color: rgba(255, 255, 255, 0.6);\n  margin: 0 5px;\n  height: ${({ value }) => value * 500}%;\n  transition-property: height;\n  transition-duration: 1s;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  padding-bottom: 20px;\n  font-size: 1.2em;\n  color: ${({ idx }) => valueColors[idx]};\n`;\n\nconst Organizer = styled.div`\n  position: absolute;\n  top: -30px;\n  right: 0;\n  text-align: right;\n  width: 200px;\n  color: #ffffff;\n`;\n\nclass Sankeys extends React.PureComponent {\n  static propTypes = {\n    nodes: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    links: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  };\n\n  render() {\n    const { nodes, links, ...props } = this.props;\n\n    return (\n      <Wrapper {...props}>\n      </Wrapper>\n    );\n  }\n}\n\nconst schema = {\n  column: \"0. 政府對民眾申請開放資料的答覆是？\",\n  value: {\n    \"申請前已對外提供\": {\n      children: [{\n        column: \"A1. 是否為開放資料？\",\n        value: {\n          \"開放資料 (跳A3)\": {\n            display: \"是開放資料\",\n            children: [{\n              column: \"A3. 是民眾需要的全部還是部分資料？\",\n              value: {\n                \"全部資料\": { display: \"已開放全部\" },\n                \"只是部分 (續A4)\": {\n                  display: \"只開放部分\",\n                  children: [{\n                    column: \"A4. (續) 目前只提供部分，有說將來要把資料補齊嗎？(填完請填A5)\",\n                    value: {\n                      \"將來補齊\": { display: \"將補齊資料\" },\n                      \"沒說要補齊\": { display: \"無計劃補齊\" },\n                    },\n                  }, {\n                    column: \"(續) A5. 目前只提供部分的原因1\",\n                    value: true,\n                  }, {\n                    column: \"(續) A6. 目前只提供部分的原因2\",\n                    value: true,\n                  }],\n                },\n              },\n            }],\n          },\n          \"不是開放資料 (續A2)\": {\n            display: \"非開放資料\",\n            children: [{\n              column: \"(續) A2. 如果目前非開放資料，有說將來提供開放資料嗎？\",\n              value: {\n                \"將來提供\": { display: \"將改為開放\" },\n                \"沒說要提供\": { display: \"無計劃開放\" },\n              },\n            }],\n          }\n        }\n      }],\n    },\n    \"同意提供\": {\n      children: [{\n        column: \"B1. 是否有說明具體提供時間，或已回報提供？\",\n        value: {\n          \"有說明時間 (續B1a)\": { display: \"提供開放時間表\" },\n          \"沒有時間表\": { display: \"沒有開放時間表\" },\n          \"已回報提供\": {},\n        },\n      }, {\n        column: \"B2. 是否提供開放資料？\",\n        value: {\n          \"提供開放資料\": { display: \"是開放資料\" },\n          \"非提供開放資料\": { display: \"非開放資料\" },\n        },\n      }, {\n        column: \"B3. 是民眾需要的全部還是部分資料？\",\n        value: {\n          \"全部資料\": { display: \"已開放全部\" },\n          \"只是部分\": {\n            display: \"只開放部分\",\n            children: [{\n              column: \"B4. 只提供部分的原因是？\",\n              value: true,\n            }],\n          },\n        },\n      }]\n    },\n    \"不同意提供\": {\n      children: [{\n        column: \"C1. 不同意開放的原因是1\",\n        value: true,\n      }, {\n        column: \"C2. 不同意開放的原因2\",\n        value: true,\n      }, {\n        column: \"C3. 不同意開放的原因是3\",\n        value: true,\n      }],\n    },\n  }\n};\n\n\nconst increase = (result, paths) => {\n  const value = _.get(result, paths, 0);\n  _.set(result, paths, value + 1);\n}\n\nconst bind = (item, parent, rule, results) => {\n  const value = item[rule.column];\n  if (rule.value === true) {\n    if (value) increase(results, [parent, value]);\n    return;\n  }\n\n  const target = rule.value[value];\n  if (!target) return;\n\n  const display = target.display || value;\n  increase(results, [parent, display]);\n  _.forEach(target.children, children => {\n    bind(item, display, children, results);\n  });\n};\n\nexport default Sankeys\n  |> withPropsOnChange([\"data\"], ({ data }) => {\n    const results = {};\n\n    _.forEach(data, item => {\n      const organizer = item[\"標記用＿派發機關\"];\n      bind(item, organizer, schema, results);\n    });\n\n    const nodes = [];\n    const links = [];\n\n    const idx = name => {\n      const index = _.indexOf(nodes, name);\n      if (index < 0) return nodes.push(name) - 1;\n      return index;\n    };\n    _.forEach(results, (result, source) => {\n      _.forEach(result, (value, target) => {\n        links.push({ source: idx(source), target: idx(target), value });\n      });\n    });\n\n    console.log(nodes, links);\n\n    return { nodes, links };\n  });\n","var baseIndexOf = require('./_baseIndexOf'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nmodule.exports = indexOf;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAQA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAQA;;;;;;;;;;;;AAMA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;AAbA;AACA;AADA;AAEA;AACA;AAFA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAOA;AACA;AAFA;AAIA;AACA;AAFA;AAXA;AAFA;AAFA;AAFA;AAyBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAFA;AA1BA;AAFA;AADA;AA0CA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAFA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAFA;AAFA;AAdA;AA4BA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAPA;AAvEA;AAFA;AACA;AAwFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;A","sourceRoot":""}